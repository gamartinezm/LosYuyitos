@model AlmacenYuyitos.Models.DETALLEPEDIDO

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DETALLEPEDIDO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ORDENPEDIDO.PROVEEDOR_PROVEEDORID, "PROVEEDORID", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.DropDownList("PROVEEDORID", ViewBag.listOrdenes as List<SelectListItem>, "Seleccionar Proveedor", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ORDENPEDIDO.PROVEEDOR_PROVEEDORID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ORDENPEDIDO.ORDENPEDIDOID, "ORDENPEDIDOID", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.DropDownList("ORDENPEDIDOID", new SelectList(string.Empty, "Value", "Text"), "Seleccionar Orden", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ORDENPEDIDO.ORDENPEDIDOID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FAMILIAPRODUCTO.DESCRIPCION)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ORDENPEDIDO.ORDENESTADO_ESTADO)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TIPOPRODUCTO.UNIDADMEDIDA)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CANTIDAD)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PRECIOCOMPRA)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.ORDENPEDIDO_ORDENPEDIDOID)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => model.ORDENPEDIDO_ORDENPEDIDOID)
                        @*@Html.LabelForModel(item => item.)*@
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ORDENPEDIDO.ORDENESTADO_ESTADO)
                        @*@Html.LabelForModel(Model.ORDENPEDIDO.ORDENESTADO_ESTADO)*@
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.TIPOPRODUCTO.UNIDADMEDIDA)
                        @*@Html.LabelForModel(Model.TIPOPRODUCTO.UNIDADMEDIDA)*@
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.CANTIDAD)
                        @*@Html.LabelForModel(Model.CANTIDAD)*@
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PRECIOCOMPRA)
                        @*@Html.LabelForModel(Model.PRECIOCOMPRA)*@
                    </td>
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                    </td>
                </tr>
            }
        </table>



        @*@{
                            if (!string.IsNullOrEmpty(Model.ORDENPEDIDO_ORDENPEDIDOID.ToString()))
                            {
                                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FAMILIAPRODUCTO.DESCRIPCION)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ORDENPEDIDO.ORDENESTADO_ESTADO)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TIPOPRODUCTO.UNIDADMEDIDA)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CANTIDAD)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PRECIOCOMPRA)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.ORDENPEDIDO_ORDENPEDIDOID.ToString())
                            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FAMILIAPRODUCTO.DESCRIPCION)
                            @Html.LabelForModel(Model.FAMILIAPRODUCTO.DESCRIPCION)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ORDENPEDIDO.ORDENESTADO_ESTADO)
                                @Html.LabelForModel(Model.ORDENPEDIDO.ORDENESTADO_ESTADO)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TIPOPRODUCTO.UNIDADMEDIDA)
                                @Html.LabelForModel(Model.TIPOPRODUCTO.UNIDADMEDIDA)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CANTIDAD)
                                @Html.LabelForModel(Model.CANTIDAD)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PRECIOCOMPRA)
                                @Html.LabelForModel(Model.PRECIOCOMPRA)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                            </td>
                            </tr>
                        }

            </table>
                    }
                }*@


        @*<div class="form-group">
                @Html.LabelFor(model => model.TIPOPRODUCTO_TIPOPRODUCTOID, "TIPOPRODUCTO_TIPOPRODUCTOID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TIPOPRODUCTO_TIPOPRODUCTOID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TIPOPRODUCTO_TIPOPRODUCTOID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ORDENPEDIDO_ORDENPEDIDOID, "ORDENPEDIDO_ORDENPEDIDOID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ORDENPEDIDO_ORDENPEDIDOID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ORDENPEDIDO_ORDENPEDIDOID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FAMILIAPRODUCTOID, "FAMILIAPRODUCTOID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FAMILIAPRODUCTOID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FAMILIAPRODUCTOID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CANTIDAD, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CANTIDAD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CANTIDAD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PRECIOCOMPRA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PRECIOCOMPRA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PRECIOCOMPRA, "", new { @class = "text-danger" })
                </div>
            </div>


            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ProveedorPedido.js"></script>
}
